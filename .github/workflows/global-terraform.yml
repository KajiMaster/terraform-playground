name: Global Terraform

on:
  pull_request:
    branches: [main]
    paths:
      - 'environments/global/**'
      - 'modules/oidc/**'
      - '.github/workflows/global-terraform.yml'
  push:
    branches: [main]
    paths:
      - 'environments/global/**'
      - 'modules/oidc/**'
      - '.github/workflows/global-terraform.yml'

env:
  TF_VERSION: "1.12.0"
  AWS_REGION: "us-east-2"
  ENVIRONMENT: "global"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Clear AWS Credentials Cache
        run: |
          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN
          unset AWS_DEFAULT_REGION
          rm -rf ~/.aws/credentials
          rm -rf ~/.aws/config
          echo "Cleared all AWS credentials cache"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123324351829:role/github-actions-global
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: global-plan-${{ github.run_id }}-${{ github.run_number }}

      - name: Terraform Init
        working-directory: environments/global
        run: terraform init

      - name: Terraform Plan
        working-directory: environments/global
        run: |
          terraform plan \
            -out=tfplan
        continue-on-error: true

      - name: Comment Plan
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            
            let comment = `## üåç GLOBAL Terraform Plan
            
            **‚ö†Ô∏è WARNING: This affects GLOBAL resources (OIDC, shared infrastructure)**
            **Environment**: Global
            **Branch**: main
            **Triggered by**: PR #${{ github.event.number }}
            
            **Please review carefully - this affects ALL environments!**`;
            
            try {
              // Use terraform show to convert binary plan to readable text
              const plan = execSync('cd environments/global && terraform show tfplan', { encoding: 'utf8' });
              
              // Strip ANSI color codes for GitHub comment readability
              const cleanPlan = plan.replace(/\x1b\[[0-9;]*m/g, '');
              
              comment += `
              
              <details><summary>Click to expand GLOBAL plan</summary>
              
              \`\`\`hcl
              ${cleanPlan}
              \`\`\`
              
              </details>
              
              **‚ö†Ô∏è GLOBAL DEPLOYMENT WARNING:**
              - This affects OIDC provider and GitHub Actions roles
              - Changes will impact ALL environments (dev, staging, production)
              - Ensure all changes are reviewed and approved
              - This is a critical infrastructure change`;
            } catch (error) {
              comment += `
              
              ‚ùå **Global Plan Failed**
              
              The Terraform plan step failed. Check the workflow logs for details.
              
              Error: ${error.message}`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Clear AWS Credentials Cache
        run: |
          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN
          unset AWS_DEFAULT_REGION
          rm -rf ~/.aws/credentials
          rm -rf ~/.aws/config
          echo "Cleared all AWS credentials cache"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123324351829:role/github-actions-global
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: global-apply-${{ github.run_id }}-${{ github.run_number }}

      - name: Terraform Init
        working-directory: environments/global
        run: terraform init

      - name: Terraform Apply
        working-directory: environments/global
        run: |
          terraform apply \
            -auto-approve

      - name: Get Outputs
        working-directory: environments/global
        run: |
          echo "## üåç GLOBAL Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "**‚ö†Ô∏è WARNING: This affects GLOBAL resources**" >> $GITHUB_STEP_SUMMARY
          echo "**Environment**: Global" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: main" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Global Infrastructure Outputs:" >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY

      - name: Global Deployment Notification
        run: |
          echo "## üéâ GLOBAL DEPLOYMENT SUCCESSFUL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Global environment has been deployed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Verify OIDC provider is working correctly" >> $GITHUB_STEP_SUMMARY
          echo "- Test GitHub Actions authentication" >> $GITHUB_STEP_SUMMARY
          echo "- Deploy to other environments if needed" >> $GITHUB_STEP_SUMMARY
          echo "- Monitor for any authentication issues" >> $GITHUB_STEP_SUMMARY 