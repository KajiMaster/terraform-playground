name: Lab Staging Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: "Type 'DESTROY-STAGING' to confirm you want to destroy staging infrastructure"
        required: true
        type: string
        default: ""

env:
  TF_VERSION: "1.12.0"
  AWS_REGION: "us-east-2"
  ENVIRONMENT: "staging"
  WORKSPACE: "staging"

permissions:
  id-token: write
  contents: read

jobs:
  validate-branch:
    name: Validate Branch
    runs-on: ubuntu-latest
    outputs:
      valid_branch: ${{ steps.check.outputs.valid_branch }}
    
    steps:
      - name: Check Branch
        id: check
        run: |
          if [ "${{ github.ref_name }}" = "develop" ]; then
            echo "valid_branch=true" >> $GITHUB_OUTPUT
            echo "✅ Running from develop branch - proceeding"
          else
            echo "valid_branch=false" >> $GITHUB_OUTPUT
            echo "❌ This workflow can only run from the 'develop' branch"
            echo "Current branch: ${{ github.ref_name }}"
            exit 1
          fi

  validate-destroy:
    name: Validate Destroy Confirmation
    runs-on: ubuntu-latest
    needs: validate-branch
    if: needs.validate-branch.outputs.valid_branch == 'true'
    outputs:
      should_destroy: ${{ steps.validate.outputs.should_destroy }}
    
    steps:
      - name: Validate Confirmation
        id: validate
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" = "DESTROY-STAGING" ]; then
            echo "should_destroy=true" >> $GITHUB_OUTPUT
            echo "✅ Staging destroy confirmed - proceeding with infrastructure destruction"
          else
            echo "should_destroy=false" >> $GITHUB_OUTPUT
            echo "❌ Destroy not confirmed. Please type 'DESTROY-STAGING' to proceed."
            exit 1
          fi

  destroy-staging:
    name: Destroy Staging Environment
    runs-on: ubuntu-latest
    needs: [validate-branch, validate-destroy]
    if: |
      needs.validate-branch.outputs.valid_branch == 'true' &&
      needs.validate-destroy.outputs.should_destroy == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123324351829:role/github-actions-global
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: lab-staging-destroy-${{ github.run_id }}

      - name: Terraform Init
        working-directory: environments/terraform
        run: terraform init

      - name: Select Staging Workspace
        working-directory: environments/terraform
        run: |
          # Check if workspace exists
          if ! terraform workspace list | grep -q " ${{ env.WORKSPACE }}$"; then
            echo "❌ Error: Terraform workspace '${{ env.WORKSPACE }}' does not exist"
            echo "Available workspaces:"
            terraform workspace list | sed 's/^/  /'
            exit 1
          fi
          
          # Switch to the staging workspace
          terraform workspace select "${{ env.WORKSPACE }}"
          echo "✅ Selected workspace: ${{ env.WORKSPACE }}"

      - name: Terraform Destroy
        working-directory: environments/terraform
        run: |
          terraform destroy \
            -var-file=${{ env.WORKSPACE }}.tfvars \
            -auto-approve

      - name: Destroy Complete
        run: |
          echo "## 🧹 Staging Environment Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "**Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "**Workspace**: ${{ env.WORKSPACE }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ✅ Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "**Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- **To rebuild**: Create a PR with changes to `environments/terraform/`" >> $GITHUB_STEP_SUMMARY
          echo "- **Or run manually**: Use the staging-terraform workflow" >> $GITHUB_STEP_SUMMARY 